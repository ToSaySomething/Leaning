// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Serialization.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Serialization.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tutorial {
class CmdData_ProductObjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CmdData_ProductObj>
     _instance;
} _CmdData_ProductObj_default_instance_;
class CmdDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CmdData>
     _instance;
} _CmdData_default_instance_;

namespace protobuf_Serialization_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CmdData_ProductObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CmdData_ProductObj, tablename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CmdData_ProductObj, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CmdData_ProductObj, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CmdData_ProductObj, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CmdData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CmdData, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CmdData, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CmdData, product_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(CmdData_ProductObj)},
  { 9, -1, sizeof(CmdData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CmdData_ProductObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CmdData_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Serialization.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _CmdData_ProductObj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CmdData_ProductObj_default_instance_);_CmdData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CmdData_default_instance_);_CmdData_default_instance_._instance.get_mutable()->product_ = const_cast< ::tutorial::CmdData_ProductObj*>(
      ::tutorial::CmdData_ProductObj::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023Serialization.proto\022\010tutorial\"\301\002\n\007CmdD"
      "ata\022\'\n\004name\030\001 \001(\0162\031.tutorial.CmdData.Obj"
      "Name\022\'\n\004type\030\002 \001(\0162\031.tutorial.CmdData.Cm"
      "dType\022-\n\007product\030\003 \001(\0132\034.tutorial.CmdDat"
      "a.ProductObj\032H\n\nProductObj\022\021\n\ttablename\030"
      "\001 \001(\t\022\n\n\002id\030\002 \001(\005\022\014\n\004name\030\003 \001(\t\022\r\n\005value"
      "\030\004 \001(\005\"0\n\007ObjName\022\020\n\014BaseObj_Name\020\000\022\023\n\017P"
      "roductObj_Name\020\001\"9\n\007CmdType\022\n\n\006SELECT\020\000\022"
      "\n\n\006INSERT\020\001\022\n\n\006UPDATE\020\002\022\n\n\006DELETE\020\003b\006pro"
      "to3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 363);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Serialization.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_Serialization_2eproto

const ::google::protobuf::EnumDescriptor* CmdData_ObjName_descriptor() {
  protobuf_Serialization_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Serialization_2eproto::file_level_enum_descriptors[0];
}
bool CmdData_ObjName_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CmdData_ObjName CmdData::BaseObj_Name;
const CmdData_ObjName CmdData::ProductObj_Name;
const CmdData_ObjName CmdData::ObjName_MIN;
const CmdData_ObjName CmdData::ObjName_MAX;
const int CmdData::ObjName_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CmdData_CmdType_descriptor() {
  protobuf_Serialization_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Serialization_2eproto::file_level_enum_descriptors[1];
}
bool CmdData_CmdType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CmdData_CmdType CmdData::SELECT;
const CmdData_CmdType CmdData::INSERT;
const CmdData_CmdType CmdData::UPDATE;
const CmdData_CmdType CmdData::DELETE;
const CmdData_CmdType CmdData::CmdType_MIN;
const CmdData_CmdType CmdData::CmdType_MAX;
const int CmdData::CmdType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdData_ProductObj::kTablenameFieldNumber;
const int CmdData_ProductObj::kIdFieldNumber;
const int CmdData_ProductObj::kNameFieldNumber;
const int CmdData_ProductObj::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdData_ProductObj::CmdData_ProductObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Serialization_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tutorial.CmdData.ProductObj)
}
CmdData_ProductObj::CmdData_ProductObj(const CmdData_ProductObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tablename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tablename().size() > 0) {
    tablename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tablename_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&id_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:tutorial.CmdData.ProductObj)
}

void CmdData_ProductObj::SharedCtor() {
  tablename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_));
  _cached_size_ = 0;
}

CmdData_ProductObj::~CmdData_ProductObj() {
  // @@protoc_insertion_point(destructor:tutorial.CmdData.ProductObj)
  SharedDtor();
}

void CmdData_ProductObj::SharedDtor() {
  tablename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CmdData_ProductObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CmdData_ProductObj::descriptor() {
  protobuf_Serialization_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Serialization_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdData_ProductObj& CmdData_ProductObj::default_instance() {
  protobuf_Serialization_2eproto::InitDefaults();
  return *internal_default_instance();
}

CmdData_ProductObj* CmdData_ProductObj::New(::google::protobuf::Arena* arena) const {
  CmdData_ProductObj* n = new CmdData_ProductObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CmdData_ProductObj::Clear() {
// @@protoc_insertion_point(message_clear_start:tutorial.CmdData.ProductObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

bool CmdData_ProductObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tutorial.CmdData.ProductObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string tablename = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tablename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tablename().data(), static_cast<int>(this->tablename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tutorial.CmdData.ProductObj.tablename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tutorial.CmdData.ProductObj.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tutorial.CmdData.ProductObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tutorial.CmdData.ProductObj)
  return false;
#undef DO_
}

void CmdData_ProductObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tutorial.CmdData.ProductObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tablename = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), static_cast<int>(this->tablename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.CmdData.ProductObj.tablename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tablename(), output);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.CmdData.ProductObj.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // int32 value = 4;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tutorial.CmdData.ProductObj)
}

::google::protobuf::uint8* CmdData_ProductObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tutorial.CmdData.ProductObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tablename = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), static_cast<int>(this->tablename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.CmdData.ProductObj.tablename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tablename(), target);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.CmdData.ProductObj.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // int32 value = 4;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tutorial.CmdData.ProductObj)
  return target;
}

size_t CmdData_ProductObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tutorial.CmdData.ProductObj)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string tablename = 1;
  if (this->tablename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tablename());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 value = 4;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CmdData_ProductObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tutorial.CmdData.ProductObj)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdData_ProductObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdData_ProductObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tutorial.CmdData.ProductObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tutorial.CmdData.ProductObj)
    MergeFrom(*source);
  }
}

void CmdData_ProductObj::MergeFrom(const CmdData_ProductObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tutorial.CmdData.ProductObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tablename().size() > 0) {

    tablename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tablename_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void CmdData_ProductObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tutorial.CmdData.ProductObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdData_ProductObj::CopyFrom(const CmdData_ProductObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tutorial.CmdData.ProductObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdData_ProductObj::IsInitialized() const {
  return true;
}

void CmdData_ProductObj::Swap(CmdData_ProductObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdData_ProductObj::InternalSwap(CmdData_ProductObj* other) {
  using std::swap;
  tablename_.Swap(&other->tablename_);
  name_.Swap(&other->name_);
  swap(id_, other->id_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CmdData_ProductObj::GetMetadata() const {
  protobuf_Serialization_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Serialization_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CmdData_ProductObj

// string tablename = 1;
void CmdData_ProductObj::clear_tablename() {
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CmdData_ProductObj::tablename() const {
  // @@protoc_insertion_point(field_get:tutorial.CmdData.ProductObj.tablename)
  return tablename_.GetNoArena();
}
void CmdData_ProductObj::set_tablename(const ::std::string& value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tutorial.CmdData.ProductObj.tablename)
}
#if LANG_CXX11
void CmdData_ProductObj::set_tablename(::std::string&& value) {
  
  tablename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tutorial.CmdData.ProductObj.tablename)
}
#endif
void CmdData_ProductObj::set_tablename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tutorial.CmdData.ProductObj.tablename)
}
void CmdData_ProductObj::set_tablename(const char* value, size_t size) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tutorial.CmdData.ProductObj.tablename)
}
::std::string* CmdData_ProductObj::mutable_tablename() {
  
  // @@protoc_insertion_point(field_mutable:tutorial.CmdData.ProductObj.tablename)
  return tablename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CmdData_ProductObj::release_tablename() {
  // @@protoc_insertion_point(field_release:tutorial.CmdData.ProductObj.tablename)
  
  return tablename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CmdData_ProductObj::set_allocated_tablename(::std::string* tablename) {
  if (tablename != NULL) {
    
  } else {
    
  }
  tablename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tablename);
  // @@protoc_insertion_point(field_set_allocated:tutorial.CmdData.ProductObj.tablename)
}

// int32 id = 2;
void CmdData_ProductObj::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 CmdData_ProductObj::id() const {
  // @@protoc_insertion_point(field_get:tutorial.CmdData.ProductObj.id)
  return id_;
}
void CmdData_ProductObj::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:tutorial.CmdData.ProductObj.id)
}

// string name = 3;
void CmdData_ProductObj::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CmdData_ProductObj::name() const {
  // @@protoc_insertion_point(field_get:tutorial.CmdData.ProductObj.name)
  return name_.GetNoArena();
}
void CmdData_ProductObj::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tutorial.CmdData.ProductObj.name)
}
#if LANG_CXX11
void CmdData_ProductObj::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tutorial.CmdData.ProductObj.name)
}
#endif
void CmdData_ProductObj::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tutorial.CmdData.ProductObj.name)
}
void CmdData_ProductObj::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tutorial.CmdData.ProductObj.name)
}
::std::string* CmdData_ProductObj::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:tutorial.CmdData.ProductObj.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CmdData_ProductObj::release_name() {
  // @@protoc_insertion_point(field_release:tutorial.CmdData.ProductObj.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CmdData_ProductObj::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:tutorial.CmdData.ProductObj.name)
}

// int32 value = 4;
void CmdData_ProductObj::clear_value() {
  value_ = 0;
}
::google::protobuf::int32 CmdData_ProductObj::value() const {
  // @@protoc_insertion_point(field_get:tutorial.CmdData.ProductObj.value)
  return value_;
}
void CmdData_ProductObj::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:tutorial.CmdData.ProductObj.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdData::kNameFieldNumber;
const int CmdData::kTypeFieldNumber;
const int CmdData::kProductFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdData::CmdData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Serialization_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tutorial.CmdData)
}
CmdData::CmdData(const CmdData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_product()) {
    product_ = new ::tutorial::CmdData_ProductObj(*from.product_);
  } else {
    product_ = NULL;
  }
  ::memcpy(&name_, &from.name_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&name_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:tutorial.CmdData)
}

void CmdData::SharedCtor() {
  ::memset(&product_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&product_)) + sizeof(type_));
  _cached_size_ = 0;
}

CmdData::~CmdData() {
  // @@protoc_insertion_point(destructor:tutorial.CmdData)
  SharedDtor();
}

void CmdData::SharedDtor() {
  if (this != internal_default_instance()) delete product_;
}

void CmdData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CmdData::descriptor() {
  protobuf_Serialization_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Serialization_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdData& CmdData::default_instance() {
  protobuf_Serialization_2eproto::InitDefaults();
  return *internal_default_instance();
}

CmdData* CmdData::New(::google::protobuf::Arena* arena) const {
  CmdData* n = new CmdData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CmdData::Clear() {
// @@protoc_insertion_point(message_clear_start:tutorial.CmdData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && product_ != NULL) {
    delete product_;
  }
  product_ = NULL;
  ::memset(&name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&name_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool CmdData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tutorial.CmdData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tutorial.CmdData.ObjName name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_name(static_cast< ::tutorial::CmdData_ObjName >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tutorial.CmdData.CmdType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::tutorial::CmdData_CmdType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tutorial.CmdData.ProductObj product = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_product()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tutorial.CmdData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tutorial.CmdData)
  return false;
#undef DO_
}

void CmdData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tutorial.CmdData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tutorial.CmdData.ObjName name = 1;
  if (this->name() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->name(), output);
  }

  // .tutorial.CmdData.CmdType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // .tutorial.CmdData.ProductObj product = 3;
  if (this->has_product()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->product_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tutorial.CmdData)
}

::google::protobuf::uint8* CmdData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tutorial.CmdData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tutorial.CmdData.ObjName name = 1;
  if (this->name() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->name(), target);
  }

  // .tutorial.CmdData.CmdType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // .tutorial.CmdData.ProductObj product = 3;
  if (this->has_product()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->product_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tutorial.CmdData)
  return target;
}

size_t CmdData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tutorial.CmdData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tutorial.CmdData.ProductObj product = 3;
  if (this->has_product()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->product_);
  }

  // .tutorial.CmdData.ObjName name = 1;
  if (this->name() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->name());
  }

  // .tutorial.CmdData.CmdType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CmdData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tutorial.CmdData)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tutorial.CmdData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tutorial.CmdData)
    MergeFrom(*source);
  }
}

void CmdData::MergeFrom(const CmdData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tutorial.CmdData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_product()) {
    mutable_product()->::tutorial::CmdData_ProductObj::MergeFrom(from.product());
  }
  if (from.name() != 0) {
    set_name(from.name());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void CmdData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tutorial.CmdData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdData::CopyFrom(const CmdData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tutorial.CmdData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdData::IsInitialized() const {
  return true;
}

void CmdData::Swap(CmdData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdData::InternalSwap(CmdData* other) {
  using std::swap;
  swap(product_, other->product_);
  swap(name_, other->name_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CmdData::GetMetadata() const {
  protobuf_Serialization_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Serialization_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CmdData

// .tutorial.CmdData.ObjName name = 1;
void CmdData::clear_name() {
  name_ = 0;
}
::tutorial::CmdData_ObjName CmdData::name() const {
  // @@protoc_insertion_point(field_get:tutorial.CmdData.name)
  return static_cast< ::tutorial::CmdData_ObjName >(name_);
}
void CmdData::set_name(::tutorial::CmdData_ObjName value) {
  
  name_ = value;
  // @@protoc_insertion_point(field_set:tutorial.CmdData.name)
}

// .tutorial.CmdData.CmdType type = 2;
void CmdData::clear_type() {
  type_ = 0;
}
::tutorial::CmdData_CmdType CmdData::type() const {
  // @@protoc_insertion_point(field_get:tutorial.CmdData.type)
  return static_cast< ::tutorial::CmdData_CmdType >(type_);
}
void CmdData::set_type(::tutorial::CmdData_CmdType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:tutorial.CmdData.type)
}

// .tutorial.CmdData.ProductObj product = 3;
bool CmdData::has_product() const {
  return this != internal_default_instance() && product_ != NULL;
}
void CmdData::clear_product() {
  if (GetArenaNoVirtual() == NULL && product_ != NULL) delete product_;
  product_ = NULL;
}
const ::tutorial::CmdData_ProductObj& CmdData::product() const {
  const ::tutorial::CmdData_ProductObj* p = product_;
  // @@protoc_insertion_point(field_get:tutorial.CmdData.product)
  return p != NULL ? *p : *reinterpret_cast<const ::tutorial::CmdData_ProductObj*>(
      &::tutorial::_CmdData_ProductObj_default_instance_);
}
::tutorial::CmdData_ProductObj* CmdData::mutable_product() {
  
  if (product_ == NULL) {
    product_ = new ::tutorial::CmdData_ProductObj;
  }
  // @@protoc_insertion_point(field_mutable:tutorial.CmdData.product)
  return product_;
}
::tutorial::CmdData_ProductObj* CmdData::release_product() {
  // @@protoc_insertion_point(field_release:tutorial.CmdData.product)
  
  ::tutorial::CmdData_ProductObj* temp = product_;
  product_ = NULL;
  return temp;
}
void CmdData::set_allocated_product(::tutorial::CmdData_ProductObj* product) {
  delete product_;
  product_ = product;
  if (product) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tutorial.CmdData.product)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace tutorial

// @@protoc_insertion_point(global_scope)
